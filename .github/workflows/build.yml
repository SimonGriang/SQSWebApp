# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
          POSTGRES_DB: mydatabase
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5


    steps:
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: 17
        distribution: 'zulu' # Alternative distribution options are available.
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore WebApp/WebApp.sln 
    - name: Setup Code Coverage
      run: |
        sudo apt-get update && sudo apt-get install glibc-source libxml2 libxrender1 libfontconfig libxext6 libc6 -y
        dotnet tool install --global dotnet-coverage
    - name: Sonarqube Begin
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: | 
        dotnet tool install --global dotnet-sonarscanner
        dotnet sonarscanner begin /k:"SimonGriang_SQSWebApp" /o:"simongriang" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml
    - name: Build
      run: dotnet build --no-restore --no-incremental WebApp/WebApp.sln


    - name: Install dotnet-ef tool
      run: dotnet tool install --global dotnet-ef
    - name: Apply database migrations
      run: dotnet ef database update --project WebApp -- --connection "Host=postgres;Port=5432;Database=mydatabase;Username=postgres;Password=${DATABASE_PASSWORD}"
    - name: Start the server
      run: dotnet run --project WebApp &
      env:
        ASPNETCORE_ENVIRONMENT: Development
        ConnectionStrings__DefaultConnection: "Host=postgres;Port=5432;Database=mydatabase;Username=postgres;Password=${DATABASE_PASSWORD}"

    - name: Install missing Playwright dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libwoff1 \
          libopus0 \
          libvpx7 \
          libevent-2.1-7 \
          libgstreamer1.0-0 \
          libgstreamer-plugins-base1.0-0 \
          libgstreamer-gl1.0-0 \
          libgstreamer-plugins-bad1.0-0 \
          libharfbuzz-icu0 \
          libhyphen0 \
          libx264-dev
    - name: Wait for server to be ready
      run: |
        sudo apt-get install -y netcat
        while ! nc -z localhost 5095; do
          sleep 1
        done

    - name: Ensure browsers are installed
      run: pwsh PlaywrightTests/bin/Debug/net8.0/playwright.ps1 install #pwsh WebApp/WebApp.UnitTests/bin/Debug/net8.0/playwright.ps1 install --with-deps # has to be modified for sure
    - name: Test
      run: dotnet test --no-build --verbosity normal WebApp/WebApp.sln
    - name: Coverage
      run: dotnet-coverage collect "dotnet test WebApp/WebApp.sln" -f xml -o "coverage.xml"
    - name: Sonarqube end
      run: dotnet sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
